<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF">

    <!--// Lable Style //-->
    <Style x:Key="GBLabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="Width"
                Value="500"></Setter>
        <Setter Property="FontSize"
                Value="50"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryLabelColor}"></Setter>

    </Style>
    
    
    
    <!--// TextBox Style //-->

    <Style x:Key="GBTextBoxStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="Height"
                Value="120"></Setter>
        <Setter Property="FontSize"
                Value="40"></Setter>
        <Setter Property="AcceptsReturn"
                Value="true"></Setter>
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto"></Setter>
        <Setter Property="Padding"
                Value="0 0 0 5"></Setter>
        <Setter Property="TextWrapping"
                Value="Wrap"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="BorderBrush"
                Value="Gray"></Setter>
        <Setter Property="Background"
                Value="{DynamicResource PrimaryTextBoxBGColor}"></Setter>
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBoxFGColor}"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="TransTextBoxBorder"
                            CornerRadius="10"
                            SnapsToDevicePixels="True"
                            BorderThickness="3"
                            BorderBrush="{TemplateBinding BorderBrush}">

                        <Grid>
                            <TextBox x:Name="TransTextBox"
                                     Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent} , UpdateSourceTrigger=PropertyChanged}"
                                     FontSize="{TemplateBinding FontSize}"
                                     AcceptsReturn="{TemplateBinding AcceptsReturn}"
                                     VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                     Padding="{TemplateBinding Padding}"
                                     TextWrapping="{TemplateBinding TextWrapping}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Background="{TemplateBinding Background}"
                                     Foreground="{TemplateBinding Foreground}"></TextBox>
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=TransTextBox , Path=IsMouseOver}"
                                     Value="True">
                            <Setter Property="BorderBrush"
                                    Value="Blue"></Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconNavigaion"
           TargetType="{x:Type RadioButton}">

        <Setter Property="Height"
                Value="50"></Setter>
        <Setter Property="Width"
                Value="{Binding Path=Width, RelativeSource={RelativeSource AncestorLevel=1 , AncestorType=StackPanel,Mode=FindAncestor}}"></Setter>

        <Setter Property="FontSize"
                Value="20" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Background="Transparent">

                        <Border x:Name="SelectedBackround"
                                Background="{DynamicResource  PrimanySelectedBackground }"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                BorderThickness="2"
                                CornerRadius="0 6 6 0" />


                        <Border x:Name="IconSelected"
                                Height="{TemplateBinding Height}"
                                Background="{DynamicResource  PrimanySelectedBorderLine}"
                                Opacity="0"
                                Width="5"
                                CornerRadius="5"
                                HorizontalAlignment="Left"
                                ></Border>

                        <fa:FontAwesome Icon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                        FontSize="25"
                                        FontWeight="ExtraLight"
                                        Foreground="{DynamicResource IconColor}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center" />

                        <!--// PopUp Style //-->
                        <Popup x:Name="PopupView"
                               SnapsToDevicePixels="True"
                               IsOpen="True"
                               Placement="Right"
                               PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                               VerticalOffset="10"
                               AllowsTransparency="True"
                               Opacity="0"
                               Tag="{Binding Path=Opacity, RelativeSource={RelativeSource self}, Mode=TwoWay}">


                            <Border Opacity="{Binding ElementName=PopupView, Path=Opacity}"
                                    Background="Blue"
                                    CornerRadius="0 10 10 0"
                                    Height="35"
                                    SnapsToDevicePixels="True"
                                    Width="{Binding ElementName=name, Path=Width}">

                                <Grid>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="12"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>


                                    <Grid Grid.Column="0">
                                        <Path Fill="Red"
                                              Stretch="Uniform"
                                              Data="M7.2,11.2C8.97,11.2 10.4,12.63 10.4,14.4C10.4,16.17 8.97,17.6 7.2,17.6C5.43,17.6 4,16.17 4,14.4C4,12.63 5.43,11.2 7.2,11.2M14.8,16A2,2 0 0,1 16.8,18A2,2 0 0,1 14.8,20A2,2 0 0,1 12.8,18A2,2 0 0,1 14.8,16M15.2,4A4.8,4.8 0 0,1 20,8.8C20,11.45 17.85,13.6 15.2,13.6A4.8,4.8 0 0,1 10.4,8.8C10.4,6.15 12.55,4 15.2,4Z" />

                                    </Grid>



                                    <TextBlock x:Name="name"
                                               Grid.Column="1"
                                               FontWeight="Bold"
                                               Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"></TextBlock>
                                        

                                </Grid>
                            </Border>

                        </Popup>


                    </Grid>


                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="False" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>

                            <!--// Don't Selected & MouseOver //-->

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconSelected"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.25"
                                                         BeginTime="0:0:0" />

                                        <DoubleAnimation Storyboard.TargetName="SelectedBackround"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.25"
                                                         BeginTime="0:0:0" />

                                    </Storyboard>

                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconSelected"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.25"
                                                         BeginTime="0:0:0" />

                                        <DoubleAnimation Storyboard.TargetName="SelectedBackround"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.25"
                                                         BeginTime="0:0:0" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            
                        </MultiTrigger>

                        <!--// PopUp Animation //-->

                        <!--//Update PopUp when change size //-->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="PopupView"
                                    Property="VerticalOffset"
                                    Value="11"></Setter>
                        </Trigger>


                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="PopupView"
                                                         Storyboard.TargetProperty="Opacity"                                                     
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>

                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="PopupView"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0.5"
                                                         To="0"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        
                        



                    </ControlTemplate.Triggers>
                    
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        
    </Style>
    

</ResourceDictionary>