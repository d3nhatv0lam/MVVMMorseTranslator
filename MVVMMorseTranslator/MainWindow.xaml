<Window Name="MainHome"
        Title="Morse Translator Window"
        x:Class="MVVMMorseTranslator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVMMorseTranslator"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Height="550"
        Width="800"
        WindowStartupLocation="CenterScreen"
        Background="Transparent"
        WindowStyle="None"
        Icon="Resources\Icon\Icon.ico">

    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0"
                      CornerRadius="0"
                      CaptionHeight="0"
                      UseAeroCaptionButtons="False"
                      ResizeBorderThickness="7" />
    </WindowChrome.WindowChrome>

    <!--// Window animation //-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoad}"
                                   CommandParameter="{Binding ElementName=MainHome}"></i:InvokeCommandAction>
        </i:EventTrigger>

        <i:EventTrigger EventName="StateChanged">
            <i:InvokeCommandAction Command="{Binding WindowStateChanged}"></i:InvokeCommandAction>
        </i:EventTrigger>

        <i:EventTrigger EventName="LocationChanged">
            <i:InvokeCommandAction Command="{Binding WindowPositionChanged}" CommandParameter="{Binding ElementName=MainHome}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>







    <Window.Resources>

        <!--//Title Btn Template//-->
        <ControlTemplate x:Key="MinimizeBtn"
                         TargetType="{x:Type Button}">
            <Border Background="{TemplateBinding Background}">
                <Path  Margin="6 2 0 0"
                       Fill="{DynamicResource TitleBtnColor}"
                       Data="M20,14H4V10H20"></Path>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="RestoreBtn"
                         TargetType="{x:Type Button}">
            <Border Background="{TemplateBinding Background}">
                <Path x:Name="RestoreBtnData"
                      Margin="6 2 0 0"
                      Fill="{DynamicResource TitleBtnColor}"
                      Data="M4,4H20V20H4V4M6,8V18H18V8H6Z"></Path>
            </Border>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding ElementName=MainHome, Path=WindowState}"
                             Value="Maximized">
                    <Setter TargetName="RestoreBtnData"
                            Property="Data"
                            Value="M4,8H8V4H20V16H16V20H4V8M16,8V14H18V6H10V8H16M6,12V18H14V12H6Z"></Setter>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CloseBtn"
                         TargetType="{x:Type Button}">
            <Border Background="{TemplateBinding Background}">
                <Path Margin="6 2 0 0"
                      Fill="{DynamicResource TitleBtnColor}"
                      Data="M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z"></Path>
            </Border>
        </ControlTemplate>
        <!--// //-->

        <!--// Main Title Button //-->
        <Style x:Key="TitleBtn"
               TargetType="Button">
            <Setter Property="Height"
                    Value="30"></Setter>
            <Setter Property="Width"
                    Value="35"></Setter>
            <Setter Property="Background"
                    Value="Transparent"></Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="{DynamicResource TitleBtnBackgound}"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>


    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <!--// Main MVVM navigation //-->

        <Grid Grid.Column="0"
              Background="{DynamicResource MenuBackgoundColor}">

            <StackPanel Margin="0 50 0 0">

                <RadioButton Content="Home"
                             Tag=" Main Home "
                             Style="{DynamicResource IconNavigaion}"
                             Command="{Binding DataContext.ChangePageCommand , RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                             CommandParameter="{Binding PageViewModels[0]}"
                             
                             IsChecked="True"></RadioButton>

                <RadioButton Content="Gear"
                             Tag=" Setting "
                             Style="{DynamicResource IconNavigaion}"
                             Command="{Binding DataContext.ChangePageCommand , RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                             CommandParameter="{Binding PageViewModels[1]}"></RadioButton>

                <RadioButton Content="Users"
                             Tag=" About Application "
                             Style="{DynamicResource IconNavigaion}"
                             Command="{Binding DataContext.ChangePageCommand , RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                             CommandParameter="{Binding PageViewModels[2]}"></RadioButton>

                <RadioButton Content="Search"
                             Tag=" References "
                             Style="{DynamicResource IconNavigaion}"
                             Command="{Binding DataContext.ChangePageCommand , RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                             CommandParameter="{Binding PageViewModels[3]}"></RadioButton>
    
                
                
            </StackPanel>

        </Grid>


        <!--// Main Screen //-->
        <Grid Grid.Column="1"
              Background="{DynamicResource PrimaryBackgoundColor}">

            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="157*"></RowDefinition>
                <RowDefinition Height="363*" />
            </Grid.RowDefinitions>

            <!--//Title Custom//-->
            <Grid Grid.Row="0"
                  Background="Transparent">
                <Grid.InputBindings>
                    <MouseBinding Gesture="LeftClick"
                                  Command="{Binding DragMoveWindow}"></MouseBinding>
                    <MouseBinding Gesture="LeftDoubleClick"
                                  Command="{Binding DataContext.RestoreApp, RelativeSource={RelativeSource AncestorType=Window}}"></MouseBinding>
                </Grid.InputBindings>

                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top">

                    <Button Command="{Binding MinimizeApp}"
                            Style="{StaticResource TitleBtn}"
                            Template="{StaticResource MinimizeBtn}"></Button>
                    <Button Command="{Binding RestoreApp}"
                            Style="{StaticResource TitleBtn}"
                            Template="{StaticResource RestoreBtn}"></Button>
                    <Button Command="{Binding CloseApp}"
                            Style="{StaticResource TitleBtn}"
                            Template="{StaticResource CloseBtn}"></Button>

                </StackPanel>

            </Grid>


            <!--// Main MVVM Screen //-->
            <Border Grid.Row="1"
                    Background="{DynamicResource SecundaryBackgoundColor}"
                    BorderThickness="15 10 15 15"
                    Grid.RowSpan="2">
                <ContentControl  Content="{Binding CurrentViewModel , UpdateSourceTrigger=PropertyChanged}" />
            </Border>

        </Grid>
    </Grid>




</Window>
